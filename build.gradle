plugins {
    id 'org.springframework.boot' version '2.4.0'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'java'

    id "com.moowork.node" version "1.3.1"
}

apply plugin: "com.moowork.node"
apply plugin: 'io.spring.dependency-management'

group = 'org.studylab'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'
def webAppDir = "$projectDir/frontend/my-app"

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencyManagement {
    imports {
        mavenBom 'io.spring.platform:platform-bom:Brussels-SR17'
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    compile 'org.thymeleaf.extras:thymeleaf-extras-springsecurity4'

    // Spring Security Dependencies
    compile "org.springframework.security:spring-security-config"
    compile "org.springframework.security:spring-security-core"
    compile "org.springframework.security:spring-security-web"

    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'mysql:mysql-connector-java'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
    useJUnitPlatform()
}

task appNpmInstall(type: NpmTask){
    workingDir = file("${webAppDir}")
    args = ["run", "build"]
}

task copyWebApp(type: Copy){
    from "frontend/my-app/build"
    into "build/resources/main/static"
}

copyWebApp.dependsOn(appNpmInstall)
compileJava.dependsOn(copyWebApp)
